# Configuration file

##########################################################################################################
# drops
#--------------------------------------------------------------------------------------------------------#
# Drops configuration
##########################################################################################################

drops {
    # Enable gold nugget drop from sand and gravel in river biomes. Chance: 2%(+ luck max 5%) [default: true]
    B:dropGoldNuggetIsEnabled=true

    # Enable nitrate drop from sand and gravel in desert, mesa and snow biomes. Chance: 2%(+ luck max 5%) [default: false]
    B:dropNiterIsEnabled=false

    # Enable bone drop from gravel (Y 30-60). Chance: 2%(+ luck max 5%) [default: true]
    B:dropBoneIsEnabled=true
}


##########################################################################################################
# general
#--------------------------------------------------------------------------------------------------------#
# General configuration
##########################################################################################################

general {
    # Show log in console [default: false]
    B:enableLog=false

    # Hide useless item duplicates from other mods in JEI overview. Changing this option take effect AFTER restarting the game! [default: true]
    B:hideUselessItems=true
}


##########################################################################################################
# ores_generation
#--------------------------------------------------------------------------------------------------------#
# Worldgen configuration - ores
##########################################################################################################

ores_generation {
    # Veins per chunk for specific ores in specific biomes [range: 0 ~ 50, default: 20]
    I:specialCount=20

    # Multiplier to increase/decrease number of veins per ore [range: 0.1 ~ 5.0, default: 1.0]
    S:countMultiplier=1.0
}


ores_generation_aluminum {
    # Generate ores in world, if a mod can use it [default: true]
    B:aluminumEnabled=true

    # Generate in world, even if no mod can use it [default: false]
    B:aluminumBypass=false

    # Size of vein [range: 0 ~ 50, default: 5]
    I:aluminumSize=5

    # Veins per chunk [range: 0 ~ 50, default: 16]
    I:aluminumCount=16

    # Lowest possible Y [range: 0 ~ 128, default: 40]
    I:aluminumMinY=40

    # Highest possible Y [range: 0 ~ 128, default: 85]
    I:aluminumMaxY=85

    # Mining level to get this ore. (0: Wood needed, 1: Stone needed, 2: Iron needed, 3: Diamond needed, 4: Obsidian needed) [range: 0 ~ 4, default: 1]
    I:aluminumLevel=1
}


ores_generation_ardite {
    # Generate in world [default: true]
    B:arditeEnabled=true

    # Generate in world, even if no mod can use it [default: false]
    B:arditeBypass=false

    # Veins per chunk [range: 0 ~ 50, default: 13]
    I:arditeCount=13

    # Mining level to get this ore. (0: Wood needed, 1: Stone needed, 2: Iron needed, 3: Diamond needed, 4: Obsidian needed) [range: 0 ~ 4, default: 4]
    I:arditeLevel=4
}


ores_generation_chromium {
    # Generate ores in world, if a mod can use it [default: true]
    B:chromiumEnabled=true

    # Generate in world, even if no mod can use it [default: false]
    B:chromiumBypass=false

    # Size of vein [range: 0 ~ 50, default: 5]
    I:chromiumSize=5

    # Veins per chunk [range: 0 ~ 50, default: 3]
    I:chromiumCount=3

    # Lowest possible Y [range: 0 ~ 128, default: 0]
    I:chromiumMinY=0

    # Highest possible Y [range: 0 ~ 128, default: 16]
    I:chromiumMaxY=16

    # Mining level to get this ore. (0: Wood needed, 1: Stone needed, 2: Iron needed, 3: Diamond needed, 4: Obsidian needed) [range: 0 ~ 4, default: 3]
    I:chromiumLevel=3
}


ores_generation_coal {
    # Size of vein [range: 0 ~ 50, default: 17]
    I:coalSize=17

    # Veins per chunk [range: 0 ~ 50, default: 15]
    I:coalCount=15

    # Lowest possible Y [range: 0 ~ 128, default: 0]
    I:coalMinY=0

    # Highest possible Y [range: 0 ~ 128, default: 128]
    I:coalMaxY=128
}


ores_generation_cobalt {
    # Generate in world [default: true]
    B:cobaltEnabled=true

    # Generate in world, even if no mod can use it [default: false]
    B:cobaltBypass=false

    # Veins per chunk [range: 0 ~ 50, default: 13]
    I:cobaltCount=13

    # Mining level to get this ore. (0: Wood needed, 1: Stone needed, 2: Iron needed, 3: Diamond needed, 4: Obsidian needed) [range: 0 ~ 4, default: 4]
    I:cobaltLevel=4
}


ores_generation_copper {
    # Generate ores in world, if a mod can use it [default: true]
    B:copperEnabled=true

    # Generate in world, even if no mod can use it [default: false]
    B:copperBypass=false

    # Size of vein [range: 0 ~ 50, default: 8]
    I:copperSize=8

    # Veins per chunk [range: 0 ~ 50, default: 8]
    I:copperCount=8

    # Lowest possible Y [range: 0 ~ 128, default: 40]
    I:copperMinY=40

    # Highest possible Y [range: 0 ~ 128, default: 74]
    I:copperMaxY=74

    # Mining level to get this ore. (0: Wood needed, 1: Stone needed, 2: Iron needed, 3: Diamond needed, 4: Obsidian needed) [range: 0 ~ 4, default: 1]
    I:copperLevel=1
}


ores_generation_diamond {
    # Size of vein [range: 0 ~ 50, default: 8]
    I:diamondSize=8

    # Veins per chunk [range: 0 ~ 50, default: 1]
    I:diamondCount=1

    # Lowest possible Y [range: 0 ~ 128, default: 0]
    I:diamondMinY=0

    # Highest possible Y [range: 0 ~ 128, default: 16]
    I:diamondMaxY=16
}


ores_generation_emerald {
    # Size of vein [range: 0 ~ 50, default: 4]
    I:emeraldSize=4

    # Veins per chunk [range: 0 ~ 50, default: 1]
    I:emeraldCount=1

    # Lowest possible Y [range: 0 ~ 128, default: 2]
    I:emeraldMinY=2

    # Highest possible Y [range: 0 ~ 128, default: 31]
    I:emeraldMaxY=31
}


ores_generation_gold {
    # Size of vein [range: 0 ~ 50, default: 8]
    I:goldSize=8

    # Veins per chunk [range: 0 ~ 50, default: 2]
    I:goldCount=2

    # Lowest possible Y [range: 0 ~ 128, default: 1]
    I:goldMinY=1

    # Highest possible Y [range: 0 ~ 128, default: 31]
    I:goldMaxY=31

    # Mining level to get this ore. (0: Wood needed, 1: Stone needed, 2: Iron needed, 3: Diamond needed, 4: Obsidian needed) [range: 0 ~ 4, default: 2]
    I:goldLevel=2
}


ores_generation_iron {
    # Size of vein [range: 0 ~ 50, default: 9]
    I:ironSize=9

    # Veins per chunk [range: 0 ~ 50, default: 15]
    I:ironCount=15

    # Lowest possible Y [range: 0 ~ 128, default: 0]
    I:ironMinY=0

    # Highest possible Y [range: 0 ~ 128, default: 64]
    I:ironMaxY=64

    # Mining level to get this ore. (0: Wood needed, 1: Stone needed, 2: Iron needed, 3: Diamond needed, 4: Obsidian needed) [range: 0 ~ 4, default: 1]
    I:ironLevel=1
}


ores_generation_lapis {
    # Size of vein [range: 0 ~ 50, default: 7]
    I:lapisSize=7

    # Veins per chunk [range: 0 ~ 50, default: 1]
    I:lapisCount=1

    # Lowest possible Y [range: 0 ~ 128, default: 1]
    I:lapisMinY=1

    # Highest possible Y [range: 0 ~ 128, default: 31]
    I:lapisMaxY=31
}


ores_generation_lead {
    # Generate ores in world, if a mod can use it [default: true]
    B:leadEnabled=true

    # Generate in world, even if no mod can use it [default: false]
    B:leadBypass=false

    # Size of vein [range: 0 ~ 50, default: 8]
    I:leadSize=8

    # Veins per chunk [range: 0 ~ 50, default: 4]
    I:leadCount=4

    # Lowest possible Y [range: 0 ~ 128, default: 10]
    I:leadMinY=10

    # Highest possible Y [range: 0 ~ 128, default: 35]
    I:leadMaxY=35

    # Mining level to get this ore. (0: Wood needed, 1: Stone needed, 2: Iron needed, 3: Diamond needed, 4: Obsidian needed) [range: 0 ~ 4, default: 2]
    I:leadLevel=2
}


ores_generation_mithril {
    # Generate ores in world, if a mod can use it [default: true]
    B:mithrilEnabled=true

    # Generate in world, even if no mod can use it [default: false]
    B:mithrilBypass=false

    # Size of vein [range: 0 ~ 50, default: 5]
    I:mithrilSize=5

    # Veins per chunk [range: 0 ~ 50, default: 2]
    I:mithrilCount=2

    # Lowest possible Y [range: 0 ~ 128, default: 0]
    I:mithrilMinY=0

    # Highest possible Y [range: 0 ~ 128, default: 16]
    I:mithrilMaxY=16

    # Mining level to get this ore. (0: Wood needed, 1: Stone needed, 2: Iron needed, 3: Diamond needed, 4: Obsidian needed) [range: 0 ~ 4, default: 3]
    I:mithrilLevel=3
}


ores_generation_netherquartz {
    # Size of vein [range: 0 ~ 50, default: 17]
    I:netherQuartzSize=17

    # Veins per chunk [range: 0 ~ 50, default: 5]
    I:netherQuartzCount=5

    # Lowest possible Y [range: 0 ~ 128, default: 0]
    I:netherQuartzMinY=0

    # Highest possible Y [range: 0 ~ 128, default: 128]
    I:netherQuartzMaxY=128
}


ores_generation_nickel {
    # Generate ores in world, if a mod can use it [default: true]
    B:nickelEnabled=true

    # Generate in world, even if no mod can use it [default: false]
    B:nickelBypass=false

    # Size of vein [range: 0 ~ 50, default: 8]
    I:nickelSize=8

    # Veins per chunk [range: 0 ~ 50, default: 4]
    I:nickelCount=4

    # Lowest possible Y [range: 0 ~ 128, default: 8]
    I:nickelMinY=8

    # Highest possible Y [range: 0 ~ 128, default: 24]
    I:nickelMaxY=24

    # Mining level to get this ore. (0: Wood needed, 1: Stone needed, 2: Iron needed, 3: Diamond needed, 4: Obsidian needed) [range: 0 ~ 4, default: 2]
    I:nickelLevel=2
}


ores_generation_platinum-group {
    # Generate ores in world, if a mod can use it [default: true]
    B:platinumEnabled=true

    # Generate in world, even if no mod can use it [default: false]
    B:platinumBypass=false

    # Mining level to get this ore. (0: Wood needed, 1: Stone needed, 2: Iron needed, 3: Diamond needed, 4: Obsidian needed) [range: 0 ~ 4, default: 3]
    I:platinumLevel=3

    # Generate ores in world, if a mod can use it [default: true]
    B:osmiumEnabled=true

    # Generate in world, even if no mod can use it [default: false]
    B:osmiumBypass=false

    # Mining level to get this ore. (0: Wood needed, 1: Stone needed, 2: Iron needed, 3: Diamond needed, 4: Obsidian needed) [range: 0 ~ 4, default: 3]
    I:osmiumLevel=3

    # Generate ores in world, if a mod can use it [default: true]
    B:iridiumEnabled=true

    # Generate in world, even if no mod can use it [default: false]
    B:iridiumBypass=false

    # Mining level to get this ore. (0: Wood needed, 1: Stone needed, 2: Iron needed, 3: Diamond needed, 4: Obsidian needed) [range: 0 ~ 4, default: 3]
    I:iridiumLevel=3

    # Size of vein [range: 0 ~ 50, default: 6]
    I:platinumGroupSize=6

    # Veins per chunk [range: 0 ~ 50, default: 2]
    I:platinumGroupCount=2

    # Lowest possible Y [range: 0 ~ 128, default: 0]
    I:platinumGroupMinY=0

    # Highest possible Y [range: 0 ~ 128, default: 32]
    I:platinumGroupMaxY=32
}


ores_generation_quartz {
    # Generate ores in world, if a mod can use it [default: true]
    B:quartzEnabled=true

    # Generate in world, even if no mod can use it [default: false]
    B:quartzBypass=false

    # Size of vein [range: 0 ~ 50, default: 8]
    I:quartzSize=8

    # Veins per chunk [range: 0 ~ 50, default: 5]
    I:quartzCount=5

    # Lowest possible Y [range: 0 ~ 128, default: 72]
    I:quartzMinY=72

    # Highest possible Y [range: 0 ~ 128, default: 128]
    I:quartzMaxY=128
}


ores_generation_redstone {
    # Size of vein [range: 0 ~ 50, default: 8]
    I:redstoneSize=8

    # Veins per chunk [range: 0 ~ 50, default: 8]
    I:redstoneCount=8

    # Lowest possible Y [range: 0 ~ 128, default: 0]
    I:redstoneMinY=0

    # Highest possible Y [range: 0 ~ 128, default: 16]
    I:redstoneMaxY=16
}


ores_generation_silver {
    # Generate ores in world, if a mod can use it [default: true]
    B:silverEnabled=true

    # Generate in world, even if no mod can use it [default: false]
    B:silverBypass=false

    # Size of vein [range: 0 ~ 50, default: 8]
    I:silverSize=8

    # Veins per chunk [range: 0 ~ 50, default: 2]
    I:silverCount=2

    # Lowest possible Y [range: 0 ~ 128, default: 8]
    I:silverMinY=8

    # Highest possible Y [range: 0 ~ 128, default: 40]
    I:silverMaxY=40

    # Mining level to get this ore. (0: Wood needed, 1: Stone needed, 2: Iron needed, 3: Diamond needed, 4: Obsidian needed) [range: 0 ~ 4, default: 2]
    I:silverLevel=2
}


ores_generation_tin {
    # Generate ores in world, if a mod can use it [default: true]
    B:tinEnabled=true

    # Generate in world, even if no mod can use it [default: false]
    B:tinBypass=false

    # Size of vein [range: 0 ~ 50, default: 8]
    I:tinSize=8

    # Veins per chunk [range: 0 ~ 50, default: 7]
    I:tinCount=7

    # Lowest possible Y [range: 0 ~ 128, default: 20]
    I:tinMinY=20

    # Highest possible Y [range: 0 ~ 128, default: 55]
    I:tinMaxY=55

    # Mining level to get this ore. (0: Wood needed, 1: Stone needed, 2: Iron needed, 3: Diamond needed, 4: Obsidian needed) [range: 0 ~ 4, default: 1]
    I:tinLevel=1
}


ores_generation_titanium {
    # Generate ores in world, if a mod can use it [default: true]
    B:titaniumEnabled=true

    # Generate in world, even if no mod can use it [default: false]
    B:titaniumBypass=false

    # Size of vein [range: 0 ~ 50, default: 5]
    I:titaniumSize=5

    # Veins per chunk [range: 0 ~ 50, default: 3]
    I:titaniumCount=3

    # Lowest possible Y [range: 0 ~ 128, default: 16]
    I:titaniumMinY=16

    # Highest possible Y [range: 0 ~ 128, default: 32]
    I:titaniumMaxY=32

    # Mining level to get this ore. (0: Wood needed, 1: Stone needed, 2: Iron needed, 3: Diamond needed, 4: Obsidian needed) [range: 0 ~ 4, default: 3]
    I:titaniumLevel=3
}


ores_generation_uranium {
    # Generate ores in world, if a mod can use it [default: true]
    B:uraniumEnabled=true

    # Generate in world, even if no mod can use it [default: false]
    B:uraniumBypass=false

    # Size of vein [range: 0 ~ 50, default: 4]
    I:uraniumSize=4

    # Veins per chunk [range: 0 ~ 50, default: 2]
    I:uraniumCount=2

    # Lowest possible Y [range: 0 ~ 128, default: 8]
    I:uraniumMinY=8

    # Highest possible Y [range: 0 ~ 128, default: 24]
    I:uraniumMaxY=24

    # Mining level to get this ore. (0: Wood needed, 1: Stone needed, 2: Iron needed, 3: Diamond needed, 4: Obsidian needed) [range: 0 ~ 4, default: 2]
    I:uraniumLevel=2
}


ores_generation_zinc {
    # Generate ores in world, if a mod can use it [default: true]
    B:zincEnabled=true

    # Generate in world, even if no mod can use it [default: false]
    B:zincBypass=false

    # Size of vein [range: 0 ~ 50, default: 8]
    I:zincSize=8

    # Veins per chunk [range: 0 ~ 50, default: 4]
    I:zincCount=4

    # Lowest possible Y [range: 0 ~ 128, default: 24]
    I:zincMinY=24

    # Highest possible Y [range: 0 ~ 128, default: 56]
    I:zincMaxY=56

    # Mining level to get this ore. (0: Wood needed, 1: Stone needed, 2: Iron needed, 3: Diamond needed, 4: Obsidian needed) [range: 0 ~ 4, default: 2]
    I:zincLevel=2
}


##########################################################################################################
# plugins
#--------------------------------------------------------------------------------------------------------#
# Support for other mods configuration
##########################################################################################################

plugins {
}


##########################################################################################################
# recipes
#--------------------------------------------------------------------------------------------------------#
# Recipes configuration
##########################################################################################################

recipes {
    # Enable alternate recipes, using realistic ingredients. [Affected recipes: forestry:fertilizer, ceramics:porcelain] [default: true]
    B:alternateRecipes=true

    # Enable aluminum bucket recipe [default: true]
    B:aluminumBucketIsEnabled=true

    # Enable aluminum hopper recipe [default: true]
    B:aluminumHopperIsEnabled=true

    # Enable aluminum shears recipe [default: true]
    B:aluminumShearsIsEnabled=true

    # Amount of nuggets by smelting item-ores in furnace [range: 1 ~ 9, default: 6]
    I:oreSmeltingAmount=6
}


##########################################################################################################
# textures
#--------------------------------------------------------------------------------------------------------#
# Alternate textures configuration
##########################################################################################################

textures {
    # A new fancy Diamond texture [default: false]
    B:diamondTexture=false

    # More golden texture for golden armor, tools and weapons [default: false]
    B:goldTextures=false

    # More golden texture for golden apple and golden carrot [default: true]
    B:goldVeggiTextures=true

    #  [default: true]
    B:diamondBlockTexture=true

    #  [default: true]
    B:diamondOreTexture=true

    #  [default: true]
    B:goldBlockTexture=true

    #  [default: false]
    B:emeraldBlockTexture=false

    #  [default: true]
    B:emeraldOreTexture=true
}


##########################################################################################################
# the_end
#--------------------------------------------------------------------------------------------------------#
# The End configuration
##########################################################################################################

the_end {
    # Enable new End style [default: true]
    B:newEndIsEnabled=true

    # New End color variations (red, blue, green, purple) [default: purple]
    S:newEndColor=purple
}


the_end_endsand {
    # Generate in world [default: true]
    B:endSandEnabled=true

    # Size of vein [range: 0 ~ 50, default: 10]
    I:endSandSize=10

    # Veins per chunk [range: 0 ~ 50, default: 2]
    I:endSandCount=2
}


the_end_goldgranite {
    # Generate in world [default: true]
    B:goldGraniteEnabled=true

    # Size of vein [range: 0 ~ 50, default: 17]
    I:goldGraniteSize=17

    # Veins per chunk [range: 0 ~ 50, default: 1]
    I:goldGraniteCount=1
}


##########################################################################################################
# world_generation
#--------------------------------------------------------------------------------------------------------#
# Worldgen configuration
##########################################################################################################

world_generation {
    # Enable new Villager [default: true]
    B:villagerIsEnabled=true

    # Disable WorldGeneration in this dimensions, recommended if specific dimension has its own worldgen [default: []]
    S:dimensionBlacklist <
        
     >
}


world_generation_andesite {
    # Generate in world [default: true]
    B:andesiteEnabled=true

    # Size of vein [range: 0 ~ 50, default: 33]
    I:andesiteSize=33

    # Veins per chunk [range: 0 ~ 50, default: 10]
    I:andesiteCount=10

    # Lowest possible Y [range: 0 ~ 128, default: 32]
    I:andesiteMinY=32

    # Highest possible Y [range: 0 ~ 128, default: 96]
    I:andesiteMaxY=96
}


world_generation_darkstone {
    # Generate in world [default: true]
    B:darkstoneEnabled=true

    # Size of vein [range: 0 ~ 50, default: 42]
    I:darkstoneSize=42

    # Veins per chunk [range: 0 ~ 50, default: 40]
    I:darkstoneCount=40
}


world_generation_diorite {
    # Generate in world [default: true]
    B:dioriteEnabled=true

    # Size of vein [range: 0 ~ 50, default: 33]
    I:dioriteSize=33

    # Veins per chunk [range: 0 ~ 50, default: 8]
    I:dioriteCount=8

    # Lowest possible Y [range: 0 ~ 128, default: 0]
    I:dioriteMinY=0

    # Highest possible Y [range: 0 ~ 128, default: 64]
    I:dioriteMaxY=64
}


world_generation_dirt {
    # Generate in world [default: true]
    B:dirtEnabled=true

    # Size of vein [range: 0 ~ 50, default: 20]
    I:dirtSize=20

    # Veins per chunk [range: 0 ~ 50, default: 2]
    I:dirtCount=2

    # Lowest possible Y [range: 0 ~ 128, default: 32]
    I:dirtMinY=32

    # Highest possible Y [range: 0 ~ 128, default: 63]
    I:dirtMaxY=63
}


world_generation_granite {
    # Generate in world [default: true]
    B:graniteEnabled=true

    # Size of vein [range: 0 ~ 50, default: 33]
    I:graniteSize=33

    # Veins per chunk [range: 0 ~ 50, default: 8]
    I:graniteCount=8

    # Lowest possible Y [range: 0 ~ 128, default: 0]
    I:graniteMinY=0

    # Highest possible Y [range: 0 ~ 128, default: 70]
    I:graniteMaxY=70
}


world_generation_gravel {
    # Generate in world [default: true]
    B:gravelEnabled=true

    # Size of vein [range: 0 ~ 50, default: 33]
    I:gravelSize=33

    # Veins per chunk [range: 0 ~ 50, default: 2]
    I:gravelCount=2

    # Lowest possible Y [range: 0 ~ 128, default: 32]
    I:gravelMinY=32

    # Highest possible Y [range: 0 ~ 128, default: 63]
    I:gravelMaxY=63
}


world_generation_gritstone {
    # Generate in world [default: true]
    B:gritstoneEnabled=true

    # Size of vein [range: 0 ~ 50, default: 17]
    I:gritstoneSize=17

    # Veins per chunk [range: 0 ~ 50, default: 13]
    I:gritstoneCount=13

    # Lowest possible Y [range: 0 ~ 128, default: 32]
    I:gritstoneMinY=32

    # Highest possible Y [range: 0 ~ 128, default: 96]
    I:gritstoneMaxY=96
}


world_generation_hardstone {
    # Generate in world [default: true]
    B:hardstoneEnabled=true

    # Size of vein [range: 0 ~ 50, default: 42]
    I:hardstoneSize=42

    # Veins per chunk [range: 0 ~ 50, default: 40]
    I:hardstoneCount=40
}


world_generation_monsteregg {
    # Size of vein [range: 0 ~ 50, default: 5]
    I:monsterEggSize=5

    # Veins per chunk [range: 0 ~ 50, default: 15]
    I:monsterEggCount=15

    # Lowest possible Y [range: 0 ~ 128, default: 16]
    I:monsterEggMinY=16

    # Highest possible Y [range: 0 ~ 128, default: 96]
    I:monsterEggMaxY=96
}


world_generation_netherwart {
    # Generate in world [default: true]
    B:netherWartEnabled=true

    # Size of vein [range: 0 ~ 50, default: 42]
    I:netherWartSize=42

    # Veins per chunk [range: 0 ~ 50, default: 20]
    I:netherWartCount=20

    # Lowest possible Y [range: 0 ~ 128, default: 0]
    I:netherWartMinY=0

    # Highest possible Y [range: 0 ~ 128, default: 128]
    I:netherWartMaxY=128
}


world_generation_sand {
    # Generate in world [default: true]
    B:sandEnabled=true

    # Size of vein [range: 0 ~ 50, default: 10]
    I:sandSize=10

    # Veins per chunk [range: 0 ~ 50, default: 2]
    I:sandCount=2

    # Lowest possible Y [range: 0 ~ 128, default: 32]
    I:sandMinY=32

    # Highest possible Y [range: 0 ~ 128, default: 63]
    I:sandMaxY=63
}


world_generation_soapstone {
    # Generate in world [default: true]
    B:soapstoneEnabled=true

    # Size of vein [range: 0 ~ 50, default: 10]
    I:soapstoneSize=10

    # Veins per chunk [range: 0 ~ 50, default: 10]
    I:soapstoneCount=10

    # Lowest possible Y [range: 0 ~ 128, default: 48]
    I:soapstoneMinY=48

    # Highest possible Y [range: 0 ~ 128, default: 96]
    I:soapstoneMaxY=96
}


